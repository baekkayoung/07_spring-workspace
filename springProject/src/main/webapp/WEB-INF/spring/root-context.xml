<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--
		* root-context.xml
		서버구동과 동시에 web.xml을 거쳐서 바로 로딩이 되는 문서
		=> 서버 구동과 동시에 바로 셋팅(빈으로 등록) 해야하는 내용들을 작성하면 됨
			주로 DB연결 설정, 트랜젝션 처리, 내외부 모듈 연동 등등
	-->
	
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:Xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
	</bean>
	
	<!-- 
       BasicDataSource dataSource = new BasicDataSource();
       dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
       dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
       dataSource.setUsername("spring");
       dataSource.setPassword("spring");
    -->
    
    
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
    	<property name="dataSource" ref="dataSource"/>
    	
    <!-- 
       SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();
       sqlSessionFactoryBean.setConfigLocation("classpath:mybatis-config.xml");
       sqlSessionFactoryBean.setDataSource(dataSource);
    -->
    </bean>
    
    
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
    	<constructor-arg ref="sqlSessionFactoryBean"/>
    </bean>
    
   	<!-- 
        SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactoryBean);
    -->
    
    <!--
    	property : setter 주입(setter를 호출한다)
    	constructor-arg : 생성자 주입(생성자를 호출한다)
    -->
    
    
    
    
    
    
    
</beans>
